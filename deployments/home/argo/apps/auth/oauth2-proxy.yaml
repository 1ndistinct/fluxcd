apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: oauth2-proxy
  namespace: apps
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-cluster-secret-store
    kind: ClusterSecretStore
  target:
    name: oauth2-proxy
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: /oauth2-proxy
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth2-proxy
  namespace: argocd
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: apps
  source:
    repoURL: 'https://oauth2-proxy.github.io/manifests'
    targetRevision: 7.5.4
    chart: oauth2-proxy
    helm:
      values: |
        config: 
          existingSecret: "oauth2-proxy"
          existingSecretMappings:
            clientID: "clientId"
            clientSecret: "clientSecret"
            cookieSecret: "cookieSecret"
          configFile: |-
            provider = "oidc"
            oidc_issuer_url = "https://auth.thewatergategroups.com"
            redirect_url = "https://oauth2.thewatergategroups.com/oauth2/callback"
            email_domains = [ "*" ]
            set_authorization_header = true
            set_xauthrequest = true
            cookie_secure = true
            custom_sign_in_logo = "-"
            custom_templates_dir = "/etc/oauth2-proxy/templates"
            skip_provider_button = true
        extraArgs:
          - --whitelist-domain=.thewatergategroups.com
          - --cookie-domain=.thewatergategroups.com
        extraVolumes:
          - name: templates
            configMap:
              name: oauth2-proxy-templates
        extraVolumeMounts:
          - name: templates
            mountPath: /etc/oauth2-proxy/templates
        serviceAccount:
          enabled: false
        ingress:
          enabled: true
          annotations:
            external-dns.alpha.kubernetes.io/alias: "true"
            external-dns.alpha.kubernetes.io/target: "thewatergategroups.com"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
            kubernetes.io/ingress.class: nginx
          hosts:
            - oauth2.thewatergategroups.com
          tls:
            - hosts:
              - oauth2.thewatergategroups.com
              secretName: wildcard-watergate-tls


