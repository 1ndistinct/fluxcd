apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin-config
data:
  config_local.py: |
    import logging
    import os
    client_id = os.environ.get("CLIENT_ID")
    client_secret = os.environ.get("CLIENT_SECRET")
    idp_url = os.environ.get("JWKS_SERVER_URL")
    logging.info("Client ID: %s",client_id)

    AUTHENTICATION_SOURCES = ['oauth2']

    OAUTH2_AUTO_CREATE_USER = True

    OAUTH2_CONFIG = [
        {
            'OAUTH2_NAME': 'authapi',
            'OAUTH2_DISPLAY_NAME': 'Ciaran',
            'OAUTH2_CLIENT_ID': client_id,
            'OAUTH2_CLIENT_SECRET': client_secret,
            'OAUTH2_TOKEN_URL': f'http://{idp_url}/token',
            'OAUTH2_AUTHORIZATION_URL': f'http://{idp_url}/oauth2/authorize',
            'OAUTH2_API_BASE_URL': f'http://{idp_url}/',
            'OAUTH2_USERINFO_ENDPOINT': f'http://{idp_url}/userinfo',
            'OAUTH2_SCOPE': 'openid email profile',
            'OAUTH2_ICON': 'fa-lock',
            'OAUTH2_BUTTON_COLOR': '#000000'
        }
    ]
---
apiVersion: v1
kind: Secret
metadata:
  name: pgadmin-authapi-config
  namespace: apps
stringData:
  CLIENT_ID: <SECRET>
  CLIENT_SECRET: <SECRET>
  JWKS_SERVER_URL: authapi.apps.svc.cluster.local:8000
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pgadmin  
  namespace: apps
spec:
  releaseName: pgadmin
  interval: 1m
  chart:
    spec:
      chart: pgadmin4
      version: '1.18.5'
      sourceRef:
        kind: HelmRepository
        name: runix-charts
        namespace: flux-system
  values:
    extraConfigmapMounts:
      - name: pgadmin-config
        mountPath: /pgadmin4/config_local.py
        subPath: config_local.py
        readOnly: false
        configMap: pgadmin-config
    persistentVolume:
      enabled: false
    envVarsFromSecrets: 
      - pgadmin-authapi-config