
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wireguard
  namespace: apps
spec:
  selector:
    matchLabels:
      app: wireguard
  template:
    metadata:
      labels:
        app: wireguard
    spec:
      containers:
        - image: linuxserver/wireguard:latest
          volumeMounts:
            - mountPath: /config
              name: wireguard-pv
          name: wireguard
          envFrom:
            - configMapRef:
                name: wireguard-config
          ports:
            - containerPort: 51820
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
      volumes:
      - name: wireguard-pv
        persistentVolumeClaim:
          claimName: wireguard-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: wireguard
  namespace: apps
spec:
  type: NodePort
  selector:
    app: wireguard
  ports:
    - name: vpn
      port: 51820
      protocol: UDP
      targetPort: 51820
      nodePort: 31500
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wireguard-pvc
spec:
  storageClassName: rook-cephfs
  accessModes: 
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wireguard-config
  namespace: wireguard
data:
  TZ: "Europe/London"
  PEERDNS: "10.152.183.10" ## kubectl -n kube-system get svc | grep kube-dns | awk '{print $3}'
  PEERS: "ciaranLaptop,joLaptop"
  ALLOWEDIPS: "0.0.0.0/0, ::/0"
  INTERNAL_SUBNET: "10.13.13.0"
  PUID: "1000"
  PGID: "1000"
  SERVERPORT: "31500"